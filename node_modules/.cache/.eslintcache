[{"C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\index.js":"1","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\App.js":"2","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\components\\movieList\\movieList.js":"3","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\pages\\movieDetail\\movie.js":"4","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\pages\\home\\home.js":"5","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\components\\header\\Header.js":"6","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\components\\card\\card.js":"7"},{"size":184,"mtime":1689596726878,"results":"8","hashOfConfig":"9"},{"size":777,"mtime":1716611911825,"results":"10","hashOfConfig":"9"},{"size":1065,"mtime":1689603728549,"results":"11","hashOfConfig":"9"},{"size":4811,"mtime":1689605953909,"results":"12","hashOfConfig":"9"},{"size":2383,"mtime":1689606066666,"results":"13","hashOfConfig":"9"},{"size":780,"mtime":1716627944284,"results":"14","hashOfConfig":"9"},{"size":1506,"mtime":1689596726874,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1oy6f0r",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"19"},"C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\index.js",[],[],[],"C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\App.js",[],[],"C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\components\\movieList\\movieList.js",["43","44"],[],"import React, {useEffect, useState} from \"react\"\r\nimport \"./movieList.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport Cards from \"../card/card\"\r\n\r\nconst MovieList = () => {\r\n    \r\n    const [movieList, setMovieList] = useState([])\r\n    const {type} = useParams()\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [type])\r\n\r\n    const getData = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=c6f23621e7f4d0912bf1902ad6ab73c6&language=en-US`)\r\n        .then(res => res.json())\r\n        .then(data => setMovieList(data.results))\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie__list\">\r\n            <h2 className=\"list__title\">{(type ? type : \"POPULAR\").toUpperCase()}</h2>\r\n            <div className=\"list__cards\">\r\n                {\r\n                    movieList.map(movie => (\r\n                        <Cards movie={movie} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\pages\\movieDetail\\movie.js",["45","46","47","48","49","50"],[],"import React, {useEffect, useState} from \"react\"\r\nimport \"./movie.css\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst Movie = () => {\r\n    const [currentMovieDetail, setMovie] = useState()\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        window.scrollTo(0,0)\r\n    }, [])\r\n\r\n    const getData = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=c6f23621e7f4d0912bf1902ad6ab73c6&language=en-US`)\r\n        .then(res => res.json())\r\n        .then(data => setMovie(data))\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"movie__intro\">\r\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"}`} />\r\n            </div>\r\n            <div className=\"movie__detail\">\r\n                <div className=\"movie__detailLeft\">\r\n                    <div className=\"movie__posterBox\">\r\n                        <img className=\"movie__poster\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.poster_path : \"\"}`} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie__detailRight\">\r\n                    <div className=\"movie__detailRightTop\">\r\n                        <div className=\"movie__name\">{currentMovieDetail ? currentMovieDetail.original_title : \"\"}</div>\r\n                        <div className=\"movie__tagline\">{currentMovieDetail ? currentMovieDetail.tagline : \"\"}</div>\r\n                        <div className=\"movie__rating\">\r\n                            {currentMovieDetail ? currentMovieDetail.vote_average: \"\"} <i class=\"fas fa-star\" />\r\n                            <span className=\"movie__voteCount\">{currentMovieDetail ? \"(\" + currentMovieDetail.vote_count + \") votes\" : \"\"}</span>\r\n                        </div>  \r\n                        <div className=\"movie__runtime\">{currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}</div>\r\n                        <div className=\"movie__releaseDate\">{currentMovieDetail ? \"Release date: \" + currentMovieDetail.release_date : \"\"}</div>\r\n                        <div className=\"movie__genres\">\r\n                            {\r\n                                currentMovieDetail && currentMovieDetail.genres\r\n                                ? \r\n                                currentMovieDetail.genres.map(genre => (\r\n                                    <><span className=\"movie__genre\" id={genre.id}>{genre.name}</span></>\r\n                                )) \r\n                                : \r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"movie__detailRightBottom\">\r\n                        <div className=\"synopsisText\">Synopsis</div>\r\n                        <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"movie__links\">\r\n                <div className=\"movie__heading\">Useful Links</div>\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.homepage && <a href={currentMovieDetail.homepage} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.imdb_id && <a href={\"https://www.imdb.com/title/\" + currentMovieDetail.imdb_id} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n            </div>\r\n            <div className=\"movie__heading\">Production companies</div>\r\n            <div className=\"movie__production\">\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.production_companies && currentMovieDetail.production_companies.map(company => (\r\n                        <>\r\n                            {\r\n                                company.logo_path \r\n                                && \r\n                                <span className=\"productionCompanyImage\">\r\n                                    <img className=\"movie__productionComapany\" src={\"https://image.tmdb.org/t/p/original\" + company.logo_path} />\r\n                                    <span>{company.name}</span>\r\n                                </span>\r\n                            }\r\n                        </>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\pages\\home\\home.js",["51"],[],"import React, { useEffect, useState } from \"react\"\r\nimport \"./home.css\"\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { Link } from \"react-router-dom\";\r\nimport MovieList from \"../../components/movieList/movieList\";\r\n\r\nconst Home = () => {\r\n\r\n    const [ popularMovies, setPopularMovies ] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=c6f23621e7f4d0912bf1902ad6ab73c6&language=en-US\")\r\n        .then(res => res.json())\r\n        .then(data => setPopularMovies(data.results))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"poster\">\r\n                <Carousel\r\n                    showThumbs={false}\r\n                    autoPlay={true}\r\n                    transitionTime={3}\r\n                    infiniteLoop={true}\r\n                    showStatus={false}\r\n                >\r\n                    {\r\n                        popularMovies.map(movie => (\r\n                            <Link style={{textDecoration:\"none\",color:\"white\"}} to={`/movie/${movie.id}`} >\r\n                                <div className=\"posterImage\">\r\n                                    <img src={`https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`} />\r\n                                </div>\r\n                                <div className=\"posterImage__overlay\">\r\n                                    <div className=\"posterImage__title\">{movie ? movie.original_title: \"\"}</div>\r\n                                    <div className=\"posterImage__runtime\">\r\n                                        {movie ? movie.release_date : \"\"}\r\n                                        <span className=\"posterImage__rating\">\r\n                                            {movie ? movie.vote_average :\"\"}\r\n                                            <i className=\"fas fa-star\" />{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"posterImage__description\">{movie ? movie.overview : \"\"}</div>\r\n                                </div>\r\n                            </Link>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n                <MovieList />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\components\\header\\Header.js",["52"],[],"import React from \"react\"\r\nimport \"./Header.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"headerLeft\">\r\n                <Link to=\"/\"><img className=\"header__icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png\" /></Link>\r\n                <Link to=\"/movies/popular\" style={{textDecoration: \"none\"}}><span>Popular</span></Link>\r\n                <Link to=\"/movies/top_rated\" style={{textDecoration: \"none\"}}><span>Top Rated</span></Link>\r\n                <Link to=\"/movies/upcoming\" style={{textDecoration: \"none\"}}><span>Upcoming</span></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\91876\\Desktop\\Projects\\imdb\\IMDB-clone-ReactApp\\src\\components\\card\\card.js",["53"],[],"import React, {useEffect, useState} from \"react\"\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\"\r\nimport \"./card.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Cards = ({movie}) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1500)\r\n    }, []) \r\n\r\n    return <>\r\n    {\r\n        isLoading\r\n        ?\r\n        <div className=\"cards\">\r\n            <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\r\n                <Skeleton height={300} duration={2} />\r\n            </SkeletonTheme>\r\n        </div>\r\n        :\r\n        <Link to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}}>\r\n            <div className=\"cards\">\r\n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie?movie.poster_path:\"\"}`} />\r\n                <div className=\"cards__overlay\">\r\n                    <div className=\"card__title\">{movie?movie.original_title:\"\"}</div>\r\n                    <div className=\"card__runtime\">\r\n                        {movie?movie.release_date:\"\"}\r\n                        <span className=\"card__rating\">{movie?movie.vote_average:\"\"}<i className=\"fas fa-star\" /></span>\r\n                    </div>\r\n                    <div className=\"card__description\">{movie ? movie.overview.slice(0,118)+\"...\" : \"\"}</div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    }\r\n    </>\r\n}\r\n\r\nexport default Cards",{"ruleId":"54","severity":1,"message":"55","line":13,"column":8,"nodeType":"56","endLine":13,"endColumn":10,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":17,"column":8,"nodeType":"56","endLine":17,"endColumn":14,"suggestions":"58"},{"ruleId":"54","severity":1,"message":"55","line":12,"column":8,"nodeType":"56","endLine":12,"endColumn":10,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":23,"column":17,"nodeType":"62","endLine":23,"endColumn":157},{"ruleId":"60","severity":1,"message":"61","line":28,"column":25,"nodeType":"62","endLine":28,"endColumn":161},{"ruleId":"63","severity":1,"message":"64","line":63,"column":74,"nodeType":"62","messageId":"65","endLine":63,"endColumn":161,"fix":"66"},{"ruleId":"63","severity":1,"message":"64","line":66,"column":73,"nodeType":"62","messageId":"65","endLine":66,"endColumn":191,"fix":"67"},{"ruleId":"60","severity":1,"message":"61","line":78,"column":37,"nodeType":"62","endLine":78,"endColumn":146},{"ruleId":"60","severity":1,"message":"61","line":32,"column":37,"nodeType":"62","endLine":32,"endColumn":119},{"ruleId":"60","severity":1,"message":"61","line":9,"column":30,"nodeType":"62","endLine":9,"endColumn":175},{"ruleId":"60","severity":1,"message":"61","line":28,"column":17,"nodeType":"62","endLine":28,"endColumn":120},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["68"],["69"],["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"71","text":"72"},{"range":"73","text":"72"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"74","fix":"78"},[3358,3358]," rel=\"noreferrer\"",[3716,3716],"Update the dependencies array to be: [getData]",{"range":"79","text":"80"},"Update the dependencies array to be: [getData, type]",{"range":"81","text":"82"},{"range":"83","text":"80"},[326,328],"[getData]",[382,388],"[getData, type]",[311,313]]